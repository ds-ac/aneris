(* This file is automatically generated from the OCaml source file
<repository_root>/ml_sources/crdt/oplib/examples/gcounter/gcounter_code.ml *)

From aneris.aneris_lang Require Import ast.
From aneris.aneris_lang.lib.serialization Require Import serialization_code.
From aneris.aneris_lang.lib Require Import list_code.
From aneris.examples.crdt.oplib Require Import oplib_code.

Definition effect : val :=
  λ: "msg" "counter",
  let: "delta" := Fst (Fst "msg") in
  let: "_x" := Snd (Fst "msg") in
  let: "_y" := Snd "msg" in
  assert: (#0 ≤ "delta");;
  "counter" + "delta".

Definition init_st : val := λ: <>, #0.

Definition counter_crdt : val := λ: <>, (init_st, effect).

Definition counter_init : val :=
  λ: "addrs" "rid",
  let: "initRes" := oplib_init int_ser int_deser "addrs" "rid" counter_crdt in
  let: "get_state" := Fst "initRes" in
  let: "update" := Snd "initRes" in
  ("get_state", "update").
