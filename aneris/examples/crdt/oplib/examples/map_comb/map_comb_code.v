(* This file is automatically generated from the OCaml source file
<repository_root>/ml_sources/crdt/oplib/examples/map_comb/map_comb_code.ml *)

From aneris.aneris_lang Require Import ast.
From aneris.aneris_lang.lib.serialization Require Import serialization_code.
From aneris.aneris_lang.lib Require Import map_code.
From aneris.aneris_lang.lib Require Import list_code.
From aneris.examples.crdt.oplib Require Import oplib_code.

Definition map_comb_effect : val :=
  位: "init" "eff" "msg" "state",
  let: "key" := Fst (Fst (Fst "msg")) in
  let: "delta" := Snd (Fst (Fst "msg")) in
  let: "vc" := Snd (Fst "msg") in
  let: "origin" := Snd "msg" in
  let: "cur_st_wo" := match: map_lookup "key" "state" with
    NONE => ("init" #(), "state")
  | SOME "cur" => ("cur", map_remove "key" "state")
  end in
  let: "current" := Fst "cur_st_wo" in
  let: "state_without" := Snd "cur_st_wo" in
  let: "newval" := "eff" ("delta", "vc", "origin") "current" in
  map_insert "key" "newval" "state_without".

Definition map_comb_init_st : val := 位: <>, map_empty #().

Definition map_comb_crdt : val :=
  位: "crdt" <>,
  let: "res" := "crdt" #() in
  let: "is" := Fst "res" in
  let: "eff" := Snd "res" in
  (map_comb_init_st, map_comb_effect "is" "eff").

Definition map_comb_init (ser : val) (deser : val) : val :=
  位: "crdt" "addrs" "rid",
  let: "initRes" := oplib_init (prod_ser string_ser ser)
                    (prod_deser string_ser deser) "addrs" "rid"
                    (map_comb_crdt "crdt") in
  let: "get_state" := Fst "initRes" in
  let: "update" := Snd "initRes" in
  ("get_state", "update").
