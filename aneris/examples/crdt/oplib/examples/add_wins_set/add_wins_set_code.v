(* This file is automatically generated from the OCaml source file
<repository_root>/ml_sources/examples/crdt/oplib/examples/add_wins_set/add_wins_set_code.ml *)

From aneris.aneris_lang Require Import ast.
From aneris.aneris_lang.lib Require Import list_code.
From aneris.aneris_lang.lib.vector_clock Require Import vector_clock_code.
From aneris.aneris_lang.lib.serialization Require Import serialization_code.
From aneris.examples.crdt.oplib Require Import oplib_code.

Definition init_st : val := λ: <>, [].

Definition effect : val :=
  λ: "msg" "st",
  let: "v" := Fst (Fst "msg") in
  let: "vc" := Snd (Fst "msg") in
  let: "_u" := Snd "msg" in
  match: "v" with
    InjL "w" => ("w", "vc") :: "st"
  | InjR "w" =>
      let: "should_keep" := λ: "p",
      (if: (Fst "p") = "w"
       then  let: "vc'" := Snd "p" in
             ~ (vect_leq "vc'" "vc")
       else  #true) in
      list_filter "should_keep" "st"
  end.

Definition aws_crdt : val := λ: <>, (init_st, effect).

Definition aws_init val_ser val_deser : val :=
  λ: "addrs" "rid",
  let: "initRes" := oplib_init (sum_ser val_ser val_ser)
                    (sum_deser val_deser val_deser) "addrs" "rid" aws_crdt in
  let: "get_state" := Fst "initRes" in
  let: "update" := Snd "initRes" in
  ("get_state", "update").
