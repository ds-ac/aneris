(* This file is automatically generated from the OCaml source file
<repository_root>/ml_sources/examples/snapshot_isolation/examples/example6/example6_code.ml *)

From aneris.aneris_lang Require Import ast.
From aneris.aneris_lang.lib.serialization Require Import serialization_code.
From aneris.examples.snapshot_isolation Require Import snapshot_isolation_code.
From aneris.examples.snapshot_isolation.util Require Import util_code.

Definition transaction1 : val :=
  λ: "cst" "f",
  start "cst";;
  wait_on_keyT "cst" (λ: "v", "v" = #0) #"x";;
  let: "vy" := match: read "cst" #"y" with
    SOME "v" => "v"
  | NONE => assert: #false
  end in
  let: "ret" := "f" "vy" in
  write "cst" #"y" "ret";;
  write "cst" #"x" #1;;
  commitT "cst".

Definition transaction2 : val :=
  λ: "cst" "f",
  start "cst";;
  write "cst" #"x" #0;;
  write "cst" #"y" #42;;
  wait_on_keyT "cst" (λ: "v", "v" = #1) #"x";;
  let: "ret" := read "cst" #"y" in
  commitT "cst";;
  assert: ("ret" = (SOME ("f" #42))).

Definition transaction1_client : val :=
  λ: "caddr" "kvs_addr" "f",
  let: "cst" := init_client_proxy int_serializer "caddr" "kvs_addr" in
  transaction1 "cst" "f".

Definition transaction2_client : val :=
  λ: "caddr" "kvs_addr" "f",
  let: "cst" := init_client_proxy int_serializer "caddr" "kvs_addr" in
  transaction2 "cst" "f".

Definition server : val := λ: "srv", init_server int_serializer "srv".
